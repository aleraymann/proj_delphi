unit uCadCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uTelaHeranca, Data.DB, RxToolEdit,
  Vcl.ExtCtrls, ZAbstractRODataset, ZAbstractDataset, ZDataset, Vcl.Grids,
  Vcl.DBGrids, Vcl.StdCtrls, Vcl.Mask, Vcl.ComCtrls, Vcl.DBCtrls, Vcl.Buttons, cCadCliente, uEnum;

type
  TfrmCadCliente = class(TformTelaHeranca)
    edtNome: TLabeledEdit;
    edtClienteId: TLabeledEdit;
    edtCEP: TMaskEdit;
    Label1: TLabel;
    edtEndereco: TLabeledEdit;
    edtBairro: TLabeledEdit;
    edtCidade: TLabeledEdit;
    edtEmail: TLabeledEdit;
    edtTelefone: TMaskEdit;
    Label2: TLabel;
    Label3: TLabel;
    edtDataNascimento: TDateEdit;
    Label4: TLabel;
    qryListagemclienteId: TIntegerField;
    qryListagemnome: TWideStringField;
    qryListagemendereco: TWideStringField;
    qryListagemcidade: TWideStringField;
    qryListagembairro: TWideStringField;
    qryListagemestado: TWideStringField;
    qryListagemcep: TWideStringField;
    qryListagemtelefone: TWideStringField;
    qryListagememail: TWideStringField;
    qryListagemdataNascimento: TDateTimeField;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
    oCliente:TCliente;

    function Excluir:Boolean; override; //possibilita reescrita
    function Gravar(EstadoDoCadastro:TEstadoDoCadastro):Boolean; override;
  public
    { Public declarations }
  end;

var
  frmCadCliente: TfrmCadCliente;

implementation

{$R *.dfm}

uses uDtmConexao;

{ TfrmCadCliente }

{$region 'override'}
function TfrmCadCliente.Excluir: Boolean;
begin
     if oCliente.Selecionar(qryListagem.FieldByName('clienteId').AsInteger) then begin
  Result:=oCliente.Apagar;
end;
end;

procedure TfrmCadCliente.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
 if Assigned(oCliente) then
  FreeAndNil(oCliente);
end;

procedure TfrmCadCliente.FormCreate(Sender: TObject);
begin
  inherited;
  oCliente:=TCliente.Create(dtmPrincipal.ConexaoDB);

  IndiceAtual:='nome';

end;

function TfrmCadCliente.Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean;
begin
       if edtClienteId.Text<>EmptyStr then
     oCliente.codigo:=StrToInt(edtClienteId.Text)
  else
     oCliente.codigo:=0;

  oCliente.nome:=edtNome.Text;
  oCliente.cep:=edtCEP.Text;
  oCliente.endereco:=edtEndereco.Text;
  oCliente.bairro:=edtBairro.Text;
  oCliente.cidade:=edtCidade.Text;
  oCliente.telefone:=edtTelefone.Text;
  oCliente.email:=edtEmail.Text;
  oCliente.dataNascimento:=edtDataNascimento.Date;

  if EstadoDoCadastro=ecInserir then
     Result:= oCliente.Inserir
  else if EstadoDoCadastro=ecAlterar then
     Result:= oCliente.Atualizar;
end;
      {$endregion}
end.
